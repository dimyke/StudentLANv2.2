@using StudentLANv2.Models
@model AddOrderLineModel

@{
    ViewBag.Title = "AddOrder";
}

<h2>Bestel hier je consumpties!</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (!Model.KitchenOrder.Paid) { 
    <div class="form">
        <h4>Kies je product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.OrderLine.ConsumptionId, Model.Consumptions, "- Gelieve een consumptie te kiezen -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderLine.ConsumptionId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.OrderLine.NumberOfItems, new { htmlAttributes = new { @class = "form-control", placeholder = "Aantal items" } })
                @Html.ValidationMessageFor(model => model.OrderLine.NumberOfItems, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <input type="submit" value="Voeg product toe!" class="btn btn-default" />
            </div>
        </div>        
    </div>
    }
    <br />
    <br />
    <h4>Overzicht:</h4>
    <hr />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Aantal
                </th>
                <th>
                    Consumptie Naam
                </th>
                <th>
                    Totaal Prijs
                </th>
                <th></th>
            </tr>
        </thead>
        @if (Model.KitchenOrder.OrderLines.Count < 1)
        {
            <tr>
                <td>
                    0
                </td>
                <td>
                    Wat lekkers
                </td>
                <td>
                    € x,xx
                </td>
                <td>
                   
                </td>
            </tr>
        }
        @foreach (var line in Model.KitchenOrder.OrderLines)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => line.NumberOfItems)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => line.Consumption.Name)
                </td>
                <td>
                    € @Html.DisplayFor(modelItem => line.PriceAmount)
                </td>
                <td align="right">
                    @if (Model.KitchenOrder.InProces == false)
                    {  <input type="button" class="btn btn-default" value="Verwijder Lijn" onclick="location.href='@Url.Action("DeleteOrderLine", "KitchenOrders", new { orderLineId = line.OrderLineId, orderid = Model.KitchenOrder.OrderId })'" />
                    }
                </td>
            </tr>
        }
        <tr>
            <td />
            <td align="right">
                Totaal bedrag:
            </td>
            <td>
                € @Html.DisplayFor(model => model.KitchenOrder.TotalAmount)
            </td>
            <td> 
                
            </td>
        </tr>
    </table>
    if (!Model.KitchenOrder.Paid)
    {
        <br />
        <div class="form">
            <div class="form-group">
                <div class="col-md-12">
                    <input type="button" class="btn btn-default" value="Betaal met je wallet" onclick="location.href='@Url.Action("PaymentWithWallet", "Payment", new { orderid = Model.KitchenOrder.OrderId })'" />
                    <a alt="Pay using Paypal" href='@Url.Action("PaymentWithPaypal", "Payment", new {orderid = Model.KitchenOrder.OrderId}, null)'>
                        <img src='@Url.Content("~/content/images/paypal.png")' />
                    </a>
                </div>
                </div>
        </div>

    }
    else
    {
        @Html.Raw("Jouw bestelling is in verwerking. Refresh deze pagina later nog eens of neem een kijkje bij de keuken hoe ver je order al staat")
    }
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




