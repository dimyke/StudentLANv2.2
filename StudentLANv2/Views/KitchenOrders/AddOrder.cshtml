@using StudentLANv2.Models
@model AddOrderLineModel

@{
    ViewBag.Title = "AddOrder";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h4>KitchenOrder</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.KitchenOrder.User.UserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.KitchenOrder.User.UserName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.KitchenOrder.Date)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.KitchenOrder.Date)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.KitchenOrder.TotalAmount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.KitchenOrder.TotalAmount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.KitchenOrder.Completed)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.KitchenOrder.Completed)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.KitchenOrder.InProces)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.KitchenOrder.InProces)
            </dd>
        </dl>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Aantal
                </th>
                <th>
                    Consumptie Naam
                </th>
                <th>
                    Totaal Prijs
                </th>
                <th></th>
            </tr>
        </thead>
            @foreach (var line in Model.KitchenOrder.OrderLines)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => line.NumberOfItems)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => line.Consumption.Name)
                    </td>
                    <td>
                        € @Html.DisplayFor(modelItem => line.PriceAmount)
                    </td>
                    <td>
                        @if (Model.KitchenOrder.InProces == false)
                    {  <input type="button" class="btn btn-default" value="Verwijder Lijn" onclick="location.href='@Url.Action("DeleteOrderLine", "KitchenOrders", new { orderLineId = line.OrderLineId, kitchenId = Model.KitchenOrder.OrderId, price = line.PriceAmount })'" />
                        }
                    </td>
                </tr>
            }

</table>
    if(!Model.KitchenOrder.InProces){ 
    <div class="form-horizontal">
        <h4>OrderLine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderLine.NumberOfItems, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderLine.NumberOfItems, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderLine.NumberOfItems, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OrderLine.ConsumptionId, "ConsumptionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderLine.ConsumptionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderLine.ConsumptionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Voeg product toe!" class="btn btn-default" />
                @*@Html.ActionLink("Sent it to the kitchen", "ToggleInProces", "KitchenOrders", new { orderid = Model.KitchenOrder.OrderId }, null)*@
                @*@using(Html.BeginForm("ToggleInProces", "KitchenOrders", new { orderid = Model.KitchenOrder.OrderId }, FormMethod.Post))
                {
                    <input type="submit" value="Finish this order" class="btn btn-default" />
                }*@                
                <a href='@Url.Action("PaymentWithPaypal", "Payment", new {orderid = Model.KitchenOrder.OrderId}, null)'>
                    <img src='@Url.Content("~/content/images/paypal.png")'/>

                </a>
                <a href='@Url.Action("PaymentWithWallet", "Payment", new { orderid = Model.KitchenOrder.OrderId }, null)'>
                    <img src='@Url.Content("~/content/images/paypal.png")' />

                </a>

            </div>
           
        </div>

    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderLine.Consumption.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderLine.ConsumptionId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderLine.Consumption.Available)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderLine.Consumption.Price)
                </th>

            </tr>
        </thead>
        <tbody data-link="row" class="rowlink">
            @foreach (var item in Model.Consumptions)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConsumptionId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Available)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    }
    else
    {
        @Html.Raw("Jouw bestelling is in verwerking. Refresh deze pagina later nog eens of neem een kijkje bij de keuken hoe ver je order al staat")
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




